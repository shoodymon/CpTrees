<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpfui="clr-namespace:Wpf.Ui.Controls;assembly=Wpf.Ui">
    <!-- Main Window Style -->
    <Style x:Key="MainWindowStyle" TargetType="Window">
        <Setter Property="Width" Value="1220" />
        <Setter Property="Height" Value="740" />
    </Style>

    <!-- Tab Item Style -->
    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="#FF1EF40A" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="#FF413D3D" />
    </Style>

    <!-- Button Style -->
    <Style x:Key="ButtnStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF413D3D" />
        <Setter Property="Foreground" Value="#FF1EF40A" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="3" />
    </Style>

    <!--// Close Button Style //-->

    <ImageBrush x:Key="close_def"
                ImageSource="/Assets/shutdown_def.png"
                Stretch="Uniform" />

    <ImageBrush x:Key="close_mo"
                ImageSource="/Assets/shutdown_mo.png"
                Stretch="Uniform" />

    <Style x:Key="CloseBtnStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="30" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="0,40,35,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_def}" />

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- Стиль для кнопок -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#F0F0F0" />
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" CornerRadius="8" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#D0D0D0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для выпадающего списка -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="#F0F0F0" />
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="ComboBoxBorder" CornerRadius="8" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <TextBox x:Name="PART_EditableTextBox" Margin="0,0,20,0" BorderThickness="0" Background="Transparent" Foreground="{TemplateBinding Foreground}" />
                            <Button x:Name="PART_Button" Content="▼" FontSize="12" HorizontalAlignment="Right" VerticalAlignment="Center" Width="20" Background="Transparent" BorderThickness="0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="Background" Value="#E0E0E0" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="Background" Value="#D0D0D0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GradientControlButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BorderElement"
                        CornerRadius="25">
                        <Border.Background>
                            <!-- Градиентная заливка -->
                            <LinearGradientBrush StartPoint="0.75,0" EndPoint="0,1">
                                <GradientStop Color="#FF81089E" Offset="0.1"/>
                                <GradientStop Color="#FF073497" Offset="0.8"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <!-- Полупрозрачный внутренний Border -->
                            <Border Background="#FFFFFF"
                                Height="20"
                                Width="100"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                CornerRadius="20"
                                Opacity="0.3" />

                            <!-- Текст кнопки -->
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="10,0,0,0"
                                          TextElement.FontFamily="Oswald"
                                          TextElement.FontSize="20"
                                          TextElement.Foreground="White"/>
                        </Grid>
                    </Border>

                    <!-- VisualStateManager для обработки состояний -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" Value="#4A4B6D" />
                            <Setter TargetName="BorderElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" Value="#33344D" />
                            <Setter TargetName="BorderElement" Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GradientTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FFF0D95D" Offset="0.0" />
                    <GradientStop Color="#FFE2F421" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="GradientComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>

        <!-- Триггеры для изменения цвета при наведении и выборе -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#8A2BE2"/>
                <!-- Фиолетовый цвет при наведении -->
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#6A0DAD"/>
                <!-- Темно-фиолетовый при выборе -->
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GradientComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="ComboBoxBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="8"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>

                            <!-- Кнопка открытия списка -->
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="2"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="Transparent"
                                                CornerRadius="8"
                                                BorderBrush="Transparent"
                                                Padding="5">
                                            <Grid>
                                                <Path x:Name="Arrow"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Fill="Black"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Arrow" Property="Fill" Value="#00CED1"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="Arrow" Property="Fill" Value="#3EA3A5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <!-- Текстовое поле для отображения выбранного элемента -->
                            <ContentPresenter Margin="10,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False"/>

                            <!-- Popup для отображения элементов -->
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border x:Name="PopupBorder"
                                        Background="#4682B4"
                                        CornerRadius="8"
                                        Margin="0,2,0,0">
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <!-- Триггеры для изменения цвета при наведении и открытии списка -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#3EA3A5" Offset="0.0" />
                                        <GradientStop Color="#3E88A5" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#4682B4" Offset="0.0" />
                                        <GradientStop Color="#00CED1" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Основные свойства -->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#00CED1" Offset="0.0" />
                    <GradientStop Color="#4682B4" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Height" Value="30"/>

        <!-- Применяем стиль GradientComboBoxItemStyle к элементам ComboBox -->
        <Setter Property="ItemContainerStyle" Value="{StaticResource GradientComboBoxItemStyle}"/>
    </Style>

</ResourceDictionary>